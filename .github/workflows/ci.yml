name: CI

on:
  push:
    branches: [dev, beta, master, gh-actions2]
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [dev]

jobs:
  # A fast overview job that checks only changed files
  overview:
    runs-on: ubuntu-latest
    container: esphome/esphome-lint:dev
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip modules
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: esphome-pip-docker-${{ hashFiles('setup.py') }}
          restore-keys: |
            esphome-pip-docker-
      - name: Cache .pio lib_deps
        uses: actions/cache@v1
        with:
          path: .pio
          key: lint-cpp-pio-${{ hashFiles('platformio.ini') }}
          restore-keys: |
            lint-cpp-pio-
      - name: Set up python environment
        run: script/setup
      # Set up the pio project so that the cpp checks know how files are compiled
      # (build flags, libraries etc)
      - name: Set up platformio environment
        run: pio init --ide atom

      - name: Run a quick lint over all changed files
        run: script/quicklint
      - name: Suggest changes
        run: script/ci-suggest-changes

  lint-clang-format:
    runs-on: ubuntu-latest
    # cpp lint job runs with esphome-lint docker image so that clang-format-*
    # doesn't have to be installed
    container: esphome/esphome-lint:dev
    steps:
      - uses: actions/checkout@v2
      # Cache platformio intermediary files (like libraries etc)
      # Note: platformio platform versions should be cached via the esphome-lint image
      - name: Cache Platformio
        uses: actions/cache@v1
        with:
          path: .pio
          key: lint-cpp-pio-${{ hashFiles('platformio.ini') }}
          restore-keys: |
            lint-cpp-pio-
      # Set up the pio project so that the cpp checks know how files are compiled
      # (build flags, libraries etc)
      - name: Set up platformio environment
        run: pio init --ide atom

      - name: Run clang-format
        run: script/clang-format -i
      - name: Suggest changes
        run: script/ci-suggest-changes

  lint-clang-tidy:
    runs-on: ubuntu-latest
    # cpp lint job runs with esphome-lint docker image so that clang-format-*
    # doesn't have to be installed
    container: esphome/esphome-lint:dev
    steps:
      - uses: actions/checkout@v2
      # Cache platformio intermediary files (like libraries etc)
      # Note: platformio platform versions should be cached via the esphome-lint image
      - name: Cache Platformio
        uses: actions/cache@v1
        with:
          path: .pio
          key: lint-cpp-pio-${{ hashFiles('platformio.ini') }}
          restore-keys: |
            lint-cpp-pio-
      # Set up the pio project so that the cpp checks know how files are compiled
      # (build flags, libraries etc)
      - name: Set up platformio environment
        run: pio init --ide atom

      - name: Run clang-tidy
        run: script/clang-tidy --all-headers --fix
      - name: Suggest changes
        run: script/ci-suggest-changes

  lint-python:
    # Don't use the esphome-lint docker image because it may contain outdated requirements.
    # This way, all dependencies are cached via the cache action.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Cache pip modules
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: esphome-pip-3.7-${{ hashFiles('setup.py') }}
          restore-keys: |
            esphome-pip-
      - name: Set up python environment
        run: script/setup

      - name: Lint Custom
        run: script/ci-custom.py
      - name: Lint Python
        run: script/lint-python

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
          test:
          - test1
          - test2
          - test3
          - test4
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Cache pip modules
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: esphome-pip-3.7-${{ hashFiles('setup.py') }}
          restore-keys: |
            esphome-pip-
      # Use per test platformio cache because tests have different platform versions
      - name: Cache ~/.platformio
        uses: actions/cache@v1
        with:
          path: ~/.platformio
          key: test-home-platformio-${{ matrix.test }}-${{ hashFiles('esphome/core_config.py') }}
          restore-keys: |
            test-home-platformio-${{ matrix.test }}-
      # Cache the intermediary build files
      - name: Cache Test Build
        uses: actions/cache@v1
        with:
          path: |
            tests/build/${{ matrix.test }}
          key: test-pio-${{ matrix.test }}-${{ hashFiles('esphome/core_config.py') }}-${{ hashFiles('esphome/**') }}
          restore-keys: |
            test-pio-${{ matrix.test }}-${{ hashFiles('esphome/core_config.py') }}
            test-pio-${{ matrix.test }}-
      - name: Set up environment
        run: script/setup

      - run: esphome tests/${{ matrix.test }}.yaml compile
